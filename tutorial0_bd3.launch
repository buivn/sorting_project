<launch>
  
  <!-- Load hand geometry parameters -->  
  <include file="$(find gpd)/launch/hand_geometry.launch">
    <arg name="node" value="classify_grasp_candidates_bd3" />
  </include>
  
  <!-- Load classifier parameters -->
  <include file="$(find gpd)/launch/lenet/ur5_classifier_15channels.launch">
    <arg name="node" value="classify_grasp_candidates_bd3" />
  </include>
  
    
    <!-- Explaination: classify_grasp_candidates is node name, classify_candidates is the file name -->
    <!-- type = name of executable file in C++, or is the python file name ___.py -->
    <node name="classify_grasp_candidates_bd3" pkg="gpd" type="classcand_bd3" output="screen">
    
    <!-- Where the point cloud is stored -->
    <!-- <param name="cloud_file_name" value="/home/bui/bui_ws/image_sample/4object2.pcd" /> -->

<!--     <param name="cloud_topic" value="/camera/depth/points" /> -->
    <param name="cloud_topic" value="/camera_remote/depth_registered/points" />

    
    
    <!-- Plotting parameters -->
    <param name="plot_normals" value="false" />
    <param name="plot_samples" value="false" />    
    <param name="plot_candidates" value="false" />
    <param name="plot_filtered_grasps" value="false" />
    <param name="plot_valid_grasps" value="false" />
    <param name="plot_clusters" value="false" />
    <param name="plot_selected_grasps" value="true" />
    
    <!-- Preprocessing of point cloud -->
    <param name="voxelize" value="false"/> <!-- Voxelize the point cloud -->
    <param name="remove_outliers" value="true"/> <!-- Remove statistical outliers from the point cloud -->
    <rosparam param="workspace"> [-0.6, 0.6, -0.5, 0.5, -0.1, 1.2] </rosparam>
    <rosparam param="camera_position"> [0, 0, 0] </rosparam> <!-- The position of the camera -->
    

    <!-- bui's adding parameters -->
<!--     <rosparam param="selected_2Dpixel"> [260, 402] </rosparam> -->
<!--     <rosparam param="selected_2Dpixel"> [305, 368] </rosparam> -->
    <rosparam param="selected_2Dpixel"> [370, 364] </rosparam>
<!--     <rosparam param="selected_2Dpixel"> [426, 385] </rosparam> -->
    <param name="based_object_number_filterPara" value="0.15" /> 



    <!-- General parameters -->
    <param name="num_samples" value="300" /> <!-- The number of samples to draw from the point cloud -->
    <param name="num_threads" value="10" /> <!-- The number of CPU threads to be used -->
    
    <!-- Parameters for local grasp candidate search -->
    <param name="nn_radius" value="0.01" /> <!-- Radius for the point neighborhood search -->
    <param name="num_orientations" value="8" /> <!-- Number of orientations to consider -->
    
    <!-- Filtering of grasp candidates --> 
    <param name="filter_grasps" value="true" /> <!-- on workspace and robot gripper width -->
    <param name="min_aperture" value="0.3" /> <!-- The minimum gripper width -->
    <param name="max_aperture" value="0.7" /> <!-- The maximum gripper width -->
    <rosparam param="workspace_grasps"> [-0.5, 0.5, -0.5, 0.5, 0.2, 1.2] </rosparam> <!-- (x,y,z)-dimensions of the workspace, should be smaller than <workspace> -->
    <param name="filter_half_antipodal" value="true"/> <!-- on half antipodal -->
    
    <!-- Filtering of grasps which are too low on (i.e. too close to) table -->
    <param name="filter_table_side_grasps" value="true" />
    <rosparam param="vertical_axis"> [0, 0, 1] </rosparam>
    <param name="angle_thresh" value="0.1" />
    <param name="table_height" value="0.0" />
    <param name="table_thresh" value="0.05" />
    
    <!-- Grasp image creation -->
    <param name="create_image_batches" value="false" /> <!-- creates grasp images in batches (less memory usage) -->
    <param name="remove_plane_before_image_calculation" value="true" /> <!-- removes table plane from point cloud to speed up shadow computations -->
        
    <!-- Clustering of grasps -->
    <param name="min_inliers" value="1" /> <!-- min inliers in each cluster; set to 0 to avoid clustering -->
    
    <!-- Grasp selection -->
    <param name="min_score_diff" value="50" /> <!-- Threshold to sort out grasps with low scores -->
    <param name="num_selected" value="5" /> <!-- The number of selected grasps (sorted by score) -->
        
    </node>
  
</launch>
